apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: valkey
spec:
  serviceName: valkey
  replicas: 3
  selector:
    matchLabels:
      app: valkey
  template:
    metadata:
      labels:
        app: valkey
    spec:
      initContainers:
      - name: config
        image: valkey/valkey:latest
        command: [ "sh", "-c" ]
        args:
          - |
            touch /etc/valkey/valkey.conf
            
            echo "finding master..."
            MASTER_FDQN=`hostname  -f | sed -e 's/valkey-[0-9]\./valkey-0./'`
            if [ "$(valkey-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
              echo "master not found, defaulting to valkey-0"

              if [ "$(hostname)" = "valkey-0" ]; then
                echo "this is valkey-0, not updating config..."
              else
                echo "updating valkey.conf..."
                echo "replicaof $MASTER_FDQN 6379" >> /etc/valkey/valkey.conf
              fi
            else
              echo "sentinel found, finding master"
              MASTER="$(valkey-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^valkey-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
              echo "master found : $MASTER, updating valkey.conf"
              echo "replicaof $MASTER 6379" >> /etc/valkey/valkey.conf
            fi
        volumeMounts:
        - name: valkey-config
          mountPath: /etc/valkey/
      containers:
      - name: valkey
        image: valkey/valkey:latest
        command: ["valkey-server"]
        args: ["/etc/valkey/valkey.conf"]
        ports:
        - containerPort: 6379
          name: valkey
        volumeMounts:
        - name: valkey-config
          mountPath: /etc/valkey/
      volumes:
      - name: valkey-config
        emptyDir: {}
  
---
apiVersion: v1
kind: Service
metadata:
  name: valkey
spec:
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    name: valkey
  selector:
    app: valkey